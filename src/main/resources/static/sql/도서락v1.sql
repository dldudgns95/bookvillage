-- 시퀀스
DROP SEQUENCE BOOK_CHECKOUT_SEQ;
DROP SEQUENCE BOOK_APPLY_SEQ;
DROP SEQUENCE QNA_ANSWER_SEQ;
DROP SEQUENCE ATTACH_ASK_SEQ;
DROP SEQUENCE QNA_ASK_SEQ;
DROP SEQUENCE ATTACH_FAC_SEQ;
DROP SEQUENCE FAC_APPLY_SEQ;
DROP SEQUENCE FACILITY_SEQ;
DROP SEQUENCE FAQ_SEQ;
DROP SEQUENCE ATTACH_NT_SEQ;
DROP SEQUENCE NOTICE_SEQ;
DROP SEQUENCE ACCESS_T_SEQ;
DROP SEQUENCE USER_T_SEQ;

CREATE SEQUENCE USER_T_SEQ NOCACHE;
CREATE SEQUENCE ACCESS_T_SEQ NOCACHE;
CREATE SEQUENCE NOTICE_SEQ NOCACHE;
CREATE SEQUENCE ATTACH_NT_SEQ NOCACHE;
CREATE SEQUENCE FAQ_SEQ NOCACHE;
CREATE SEQUENCE FACILITY_SEQ NOCACHE;
CREATE SEQUENCE FAC_APPLY_SEQ NOCACHE;
CREATE SEQUENCE ATTACH_FAC_SEQ NOCACHE;
CREATE SEQUENCE QNA_ASK_SEQ NOCACHE;
CREATE SEQUENCE ATTACH_ASK_SEQ NOCACHE;
CREATE SEQUENCE QNA_ANSWER_SEQ NOCACHE;
CREATE SEQUENCE BOOK_APPLY_SEQ NOCACHE;
CREATE SEQUENCE BOOK_CHECKOUT_SEQ NOCACHE;


-- 테이블
DROP TABLE BOOK_CHECKOUT;
DROP TABLE WISH;
DROP TABLE SCORE;
DROP TABLE BOOK;
DROP TABLE BOOK_APPLY;
DROP TABLE QNA_ANSWER;
DROP TABLE ATTACH_ASK;
DROP TABLE QNA_ASK;
DROP TABLE ATTACH_FAC;
DROP TABLE FAC_APPLY;
DROP TABLE FACILITY;
DROP TABLE FAQ;
DROP TABLE ATTACH_NT;
DROP TABLE NOTICE;
DROP TABLE INACTIVE_USER;
DROP TABLE ACCESS_T;
DROP TABLE USER_T;


-- 회원테이블
CREATE TABLE USER_T (
  USER_NO          NUMBER NOT NULL,      -- 회원번호
  EMAIL            VARCHAR2(100 BYTE),   -- 회원이메일
  PW               VARCHAR2(64 BYTE),    -- 비밀번호
  NAME             VARCHAR2(50 BYTE),    -- 회원이름
  MOBILE           VARCHAR2(15 BYTE),    -- 전화번호
  GENDER           NUMBER,               -- 성별 (0:남자, 1:여자, 2: 선택안함)
  AGREE            NUMBER,               -- 동의 (0:필수, 1: 이벤트)
  STATE            NUMBER,               -- 상태 (가입형태, 0:일반회원, 1:네이버간편로그인, 2:구글간편로그인)
  AUTH             NUMBER,               -- 등급 (0:일반, 1: 휴면, 9: 관리자)
  PW_MODIFIED_DATE DATE,                 -- 비밀번호 수정일
  JOINED_DATE      DATE,                 -- 회원가입일
  STATUS           NUMBER,               -- 대출가능여부 (도서상태, 0:대출불가, 1:대출가능)
  CONSTRAINT PK_USER_T PRIMARY KEY(USER_NO)
);

-- 접속 기록
CREATE TABLE ACCESS_T (
  USER_NO    NUMBER NOT NULL,
  LOGIN_DATE NUMBER NULL,              -- 로그인일시
  CONSTRAINT PK_ACCESS_T PRIMARY KEY(USER_NO)
);

-- 휴면회원테이블
CREATE TABLE INACTIVE_USER (
  USER_NO            NUMBER            NOT NULL,  -- 회원번호
  EMAIL              VARCHAR2(100 BYTE) NULL,      -- 회원이메일
  PW                 VARCHAR2(64 BYTE)  NULL,      -- 회원비밀번호
  NAME               VARCHAR2(50 BYTE)  NULL,      -- 회원이름
  MOBILE             VARCHAR2(15 BYTE)  NULL,      -- 회원휴대전화
  GENDER             NUMBER             NULL,      -- 회원성별(0:남자, 1:여자, 2:선택안함)
  AGREE              NUMBER             NULL,      -- 서비스동의여부(0:필수, 1:이벤트)
  STATE              NUMBER             NULL,      -- 가입형태(0:일반, 1:네이버간편로그인, 2:구글간편로그인)
  AUTH               NUMBER             NULL,      -- 회원등급(0:일반, 1:휴면, 9:관리자)
  PW_MODIFIED_DATE   DATE               NULL,      -- 비밀번호수정일
  JOINED_DATE        DATE               NULL,      -- 회원가입일
  INACTIVE_DATE      DATE               NULL,      -- 휴면회원등록일
  CONSTRAINT PK_INACTIVE_USER PRIMARY KEY(USER_NO)
);

-- 공지사항 테이블
CREATE TABLE NOTICE (
  NT_NO      NUMBER          NOT NULL,
  NT_TITLE   VARCHAR2(300 BYTE) NOT NULL,
  NT_CONTENT VARCHAR2(1000 BYTE) NOT NULL,
  NT_DATE    DATE              NOT NULL,
  CONSTRAINT PK_NOTICE PRIMARY KEY(NT_NO)
);

-- 첨부파일 테이블
CREATE TABLE ATTACH_NT (
  ATTACH_NT_NO          NUMBER               NOT NULL,
  NT_NO                 NUMBER               NOT NULL,
  NT_PATH               VARCHAR2(4000 BYTE)  NOT NULL,
  NT_ORIGINAL_FILENAME  VARCHAR2(4000 BYTE)  NOT NULL,
  NT_FILESYSTEM_NAME    VARCHAR2(4000 BYTE)  NOT NULL,
  NT_DOWNLOAD_COUNT     NUMBER               NULL,
  NT_HAS_THUMBNAIL      NUMBER               NULL,
  CONSTRAINT PK_ATTACH_NT PRIMARY KEY(ATTACH_NT_NO),
  CONSTRAINT FK_ATTACH_NT FOREIGN KEY(NT_NO) REFERENCES NOTICE(NT_NO) ON DELETE CASCADE
);

-- FAQ 테이블
CREATE TABLE FAQ (
  FAQ_NO      NUMBER              NOT NULL,
  FAQ_TITLE   VARCHAR2(300 BYTE)  NOT NULL,
  FAQ_CONTENT VARCHAR2(4000 BYTE) NOT NULL,
  CONSTRAINT PK_FAQ PRIMARY KEY(FAQ_NO)
);

-- 시설 테이블
CREATE TABLE FACILITY (
  FAC_NO       NUMBER              NOT NULL,
  FAC_NAME     VARCHAR2(100 BYTE)  NOT NULL,
  FAC_CONTENT  VARCHAR2(4000 BYTE) NULL,
  CONSTRAINT PK_FACILITY PRIMARY KEY(FAC_NO)
);

-- 시설 신청 테이블
CREATE TABLE FAC_APPLY (
  FAC_APPLY_NO NUMBER NOT NULL,
  USER_NO      NUMBER NOT NULL,
  FAC_NO       NUMBER NOT NULL,
  FAC_REG_DATE DATE   NOT NULL,
  FAC_START    DATE   NOT NULL,
  FAC_END      DATE   NOT NULL,
  CONSTRAINT PK_FAC_APPLY PRIMARY KEY(FAC_APPLY_NO),
  CONSTRAINT FK1_FAC_APPLY FOREIGN KEY(USER_NO) REFERENCES USER_T(USER_NO) ON DELETE SET NULL,
  CONSTRAINT FK2_FAC_APPLY FOREIGN KEY(FAC_NO) REFERENCES FACILITY(FAC_NO) ON DELETE SET NULL
);

-- 시설 첨부파일 테이블
CREATE TABLE ATTACH_FAC (
  FAC_ATTACH_NO          NUMBER               NULL,
  FAC_NO                 NUMBER               NOT NULL,
  FAC_PATH               VARCHAR2(300 BYTE)   NOT NULL,
  FAC_ORIGINAL_FILENAME  VARCHAR2(4000 BYTE)  NOT NULL,
  FAC_FILESYSTEM_NAME    VARCHAR2(300 BYTE)   NOT NULL,
  FAC_HAS_THUMBNAIL      VARCHAR2(4000 BYTE)  NULL,
  CONSTRAINT PK_ATTACH_FAC PRIMARY KEY(FAC_ATTACH_NO),
  CONSTRAINT FK_ATTACH_FAC FOREIGN KEY(FAC_NO) REFERENCES FACILITY(FAC_NO) ON DELETE CASCADE
);


-- 1:1 문의
CREATE TABLE QNA_ASK (
	ASK_NO	        NUMBER	            NOT NULL,
	USER_NO         NUMBER              NOT NULL,
	ASK_TITLE       VARCHAR2(100 BYTE)	NOT NULL,
	ASK_CONTENT     VARCHAR2(1000 BYTE)	NOT NULL,
	ASK_DATE        DATE	            NULL,
	ASK_STATE       NUMBER	            NULL,
    CONSTRAINT QNA_ASK_PK PRIMARY KEY (ASK_NO),
    CONSTRAINT QNA_ASK_FK FOREIGN KEY (USER_NO) REFERENCES USER_T(USER_NO) ON DELETE SET NULL
);

-- 1:1 문의 첨부파일
CREATE TABLE ATTACH_ASK (
	ASK_ATTACH_NO	        NUMBER	            NULL,      --1:1문의 첨부번호
	ASK_NO	                NUMBER	            NOT NULL,  --문의 번호
	ASK_PATH	            VARCHAR2 (300 BYTE)	NOT NULL,  --경로
	ASK_ORIGINAL_FILENAME	VARCHAR2 (300 BYTE)	NOT NULL,  --원래 이름
	ASK_FILESYSTEM_NAME	    VARCHAR2 (300 BYTE)	NOT NULL,  --저장된 이름
	ASK_DOWNLOAD_COUNT	    NUMBER	            NULL,      --다운로드 횟수
	ASK_HAS_THUMBNAIL	    NUMBER	            NULL,      --썸네일 유무
    CONSTRAINT PK_ATTACH_ASK PRIMARY KEY (ASK_ATTACH_NO),
    CONSTRAINT FK_ATTACH_ASK FOREIGN KEY (ASK_NO) REFERENCES QNA_ASK(ASK_NO) ON DELETE SET NULL
);

-- 1:1 문의 답변
CREATE TABLE QNA_ANSWER (
    ANS_NO      NUMBER               NOT NULL,   --답변 번호
    USER_NO     NUMBER               NOT NULL,   --회원 번호
    ANS_CONTENT VARCHAR2 (1000 BYTE) NOT NULL,   --답변 내용
    ANS_DATE    DATE                 NOT NULL,   --답변일
    ASK_NO      NUMBER               NOT NULL,   --문의 번호
    CONSTRAINT PK_QNA_ANSWER PRIMARY KEY (ANS_NO),
    CONSTRAINT FK_QNA_ANSWER FOREIGN KEY (ASK_NO) REFERENCES QNA_ASK(ASK_NO) ON DELETE CASCADE
);

-- 희망도서신청
CREATE TABLE BOOK_APPLY (
   APPLY_NO  NUMBER               NOT NULL,  --신청번호
   USER_NO   NUMBER               NOT NULL,  --회원 번호
   BOOK_NAME VARCHAR2(100 BYTE)   NOT NULL,  --책제목
   AUTHOR    VARCHAR2(100 BYTE)   NULL,      --저자
   PUBLISHER VARCHAR2(100 BYTE)   NULL,      --출판사
   WISH      VARCHAR2(4000 BYTE)  NULL,      --신청사유
   CONSTRAINT PK_BOOK_APPLY PRIMARY KEY (APPLY_NO),
   CONSTRAINT FK_BOOK_APPLY FOREIGN KEY (USER_NO) REFERENCES USER_T(USER_NO) ON DELETE SET NULL
);


CREATE TABLE BOOK (
	ISBN	        NUMBER	             NOT NULL,
	TITLE	        VARCHAR2(1000 BYTE)	 NOT NULL,
	COVER	        VARCHAR2(2000 BYTE)	 NULL,
	AUTHOR	        VARCHAR2(200 BYTE)	 NULL,
	PUBLISHER	    VARCHAR2(100 BYTE)	 NULL,
	PUBDATE	        DATE            	 NULL,
	DESCRIPTION	    VARCHAR2(2000 BYTE)	 NULL,
	STATUS	        NUMBER           	 NULL,
	CATEGORY_NAME	VARCHAR2(1000 BYTE)  NULL,
	CATEGORY_ID	    VARCHAR2(100 BYTE)   NULL,
    CONSTRAINT      PK_BOOK              PRIMARY KEY(ISBN)
);

CREATE TABLE SCORE (
	ISBN	    NUMBER         NOT NULL,
	USER_NO	    NUMBER         NOT NULL,
	REVIEW_DATE	DATE	       NOT NULL,
	STAR	    NUMBER	       NULL,
	REVIEW	    VARCHAR2(1000) NULL,
    CONSTRAINT  PK_SCORE        PRIMARY KEY(ISBN, USER_NO),
    CONSTRAINT  FK1_SCORE      FOREIGN KEY(ISBN)           REFERENCES BOOK(ISBN)    ON DELETE CASCADE,
    CONSTRAINT  FK2_SCORE     FOREIGN KEY(USER_NO)        REFERENCES USER_T(USER_NO) ON DELETE CASCADE
);

CREATE TABLE WISH (
	ISBN	    NUMBER         NOT NULL,
	USER_NO	    NUMBER	       NOT NULL,
	WISH_DATE	TIMESTAMP      NOT NULL,
    CONSTRAINT  PK_WISH        PRIMARY KEY(ISBN, USER_NO),
    CONSTRAINT  FK1_WISH       FOREIGN KEY(ISBN)           REFERENCES BOOK(ISBN)    ON DELETE CASCADE,
    CONSTRAINT  FK2_WISH       FOREIGN KEY(USER_NO)        REFERENCES USER_T(USER_NO) ON DELETE CASCADE
);
-- 도서 대출 테이블
CREATE TABLE BOOK_CHECKOUT (
  CHECKOUT_NO NUMBER NOT NULL,      -- 대출번호(시퀀스 사용)
  USER_NO     NUMBER NOT NULL,      -- 회원번호(USER 테이블 참조)
  ISBN        NUMBER NOT NULL,      -- ISBN(BOOK 테이블 참조)
  STATUS      NUMBER NOT NULL,      -- 대출상태(0:대출신청, 1:대출중, 2:반납완료, 3:연체)
  START_DATE  DATE   NOT NULL,      -- 대출시작날짜
  DUE_DATE    DATE   NOT NULL,      -- 대출반납예정일
  END_DATE    DATE   NULL,          -- 대출반납일
  CONSTRAINT PK_BOOK_CHECKOUT PRIMARY KEY(CHECKOUT_NO),
  CONSTRAINT FK1_BOOK_CHECKOUT FOREIGN KEY(USER_NO) REFERENCES USER_T(USER_NO),
  CONSTRAINT FK2_BOOK_CHECKOUT FOREIGN KEY(ISBN) REFERENCES BOOK(ISBN)
);