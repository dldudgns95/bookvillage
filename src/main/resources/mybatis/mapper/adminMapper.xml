<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.co.bookvillage.dao.AdminMapper">
  
    <resultMap id="AttachFacMap" type="AttachFacDto">
    <id column="FAC_ATTACH_NO"             property="facAttachNo" />
    <result column="FAC_PATH"              property="facPath" />
    <result column="FAC_ORIGINAL_FILENAME" property="facOriginalFilename" />
    <result column="FAC_FILESYSTEM_NAME"   property="facFilesystemName" />
    <result column="FAC_HAS_THUMBNAIL"     property="facHasThumbnail" />
    <association javaType="FacilityDto" property="facilityDto">
      <id column="FAC_NO" property="facNo" />
    </association>
  </resultMap>  

  <!-- 책 넣기 -->
  <insert id="insertBook" parameterType="bookDto">
    INSERT INTO BOOK(
      ISBN
    , TITLE
    , COVER
    , AUTHOR
    , PUBLISHER
    , PUBDATE
    , DESCRIPTION
    , STATUS
    , CATEGORY_NAME
    , CATEGORY_ID
    ) VALUES(
      #{isbn}
    , #{title}
    , #{cover}
    , #{author}
    , #{publisher}
    , #{pubdate}
    , #{description}
    , 1
    , #{categoryName}
    , #{categoryId}
    )
  </insert>
  
  <!-- 총 유저수 카운트-->
  <select id="userTotalCount" resultType="int">
    SELECT COUNT(*)
      FROM USER_T
  </select>
  
  <!-- 유저 목록 가져오기-->
  <select id="getUserList" parameterType="Map" resultType="UserDto">
    SELECT USER_NO, EMAIL, PW, NAME, MOBILE, GENDER, AGREE, STATE, AUTH, PW_MODIFIED_DATE, JOINED_DATE, STATUS
      FROM (SELECT ROW_NUMBER() OVER(ORDER BY USER_NO ASC) AS RN, USER_NO, EMAIL, PW, NAME, MOBILE, GENDER, AGREE, STATE, AUTH, PW_MODIFIED_DATE, JOINED_DATE, STATUS
              FROM USER_T)
     WHERE RN BETWEEN #{begin} AND #{end}
  </select>
  <!-- 유저 목록 가져오기-->
  <select id="getUserDetail" parameterType="int" resultType="UserDto">
    SELECT USER_NO, EMAIL, PW, NAME, MOBILE, GENDER, AGREE, STATE, AUTH, PW_MODIFIED_DATE, JOINED_DATE, STATUS
      FROM USER_T
     WHERE USER_NO = #{userNo}
  </select>
  
  <!-- 검색 유저수 카운트-->
  <select id="userSearchCount" parameterType="Map" resultType="int">
    SELECT COUNT(*)
      FROM USER_T
     WHERE ${column} LIKE '%' || #{query} || '%'
  </select>
  
  <!-- 검색 유저 목록 가져오기-->
  <select id="getSearchUserList" parameterType="Map" resultType="UserDto">
    SELECT USER_NO, EMAIL, PW, NAME, MOBILE, GENDER, AGREE, STATE, AUTH, PW_MODIFIED_DATE, JOINED_DATE, STATUS
      FROM (SELECT ROW_NUMBER() OVER(ORDER BY USER_NO ASC) AS RN, USER_NO, EMAIL, PW, NAME, MOBILE, GENDER, AGREE, STATE, AUTH, PW_MODIFIED_DATE, JOINED_DATE, STATUS
              FROM USER_T
             WHERE ${column} LIKE '%' || #{query} || '%')
     WHERE RN BETWEEN #{begin} AND #{end}
     
  </select>
  
  <!-- 총 도서수 카운트-->
  <select id="bookTotalCount" resultType="int">
    SELECT COUNT(*)
      FROM BOOK
  </select>
  
  <!-- 도서 목록 가져오기-->
  <select id="getBookList" parameterType="Map" resultType="BookDto">
    SELECT ISBN, TITLE, COVER, AUTHOR, PUBLISHER, PUBDATE, DESCRIPTION, STATUS, CATEGORY_NAME, CATEGORY_ID
      FROM (SELECT ROW_NUMBER() OVER(ORDER BY PUBDATE DESC) AS RN, ISBN, TITLE, COVER, AUTHOR, PUBLISHER, PUBDATE, DESCRIPTION, STATUS, CATEGORY_NAME, CATEGORY_ID
              FROM BOOK)
     WHERE RN BETWEEN #{begin} AND #{end}
  </select>
  
  <!-- 도서 상세 검색 -->
  <select id="getBookDetail" parameterType="long" resultType="BookDto">
    SELECT ISBN, TITLE, COVER, AUTHOR, PUBLISHER, PUBDATE, DESCRIPTION, STATUS, CATEGORY_NAME, CATEGORY_ID
      FROM BOOK
     WHERE ISBN = #{isbn}
  </select>
  
  <!-- 검색 도서수 카운트-->
  <select id="bookSearchCount" parameterType="Map" resultType="int">
    SELECT COUNT(*)
      FROM BOOK
     WHERE ${column} LIKE '%' || #{query} || '%'
  </select>
  
  <!-- 검색 도서 목록 가져오기-->
  <select id="getSearchBookList" parameterType="Map" resultType="BookDto">
    SELECT ISBN, TITLE, COVER, AUTHOR, PUBLISHER, PUBDATE, DESCRIPTION, STATUS, CATEGORY_NAME, CATEGORY_ID
      FROM (SELECT ROW_NUMBER() OVER(ORDER BY PUBDATE DESC) AS RN, ISBN, TITLE, COVER, AUTHOR, PUBLISHER, PUBDATE, DESCRIPTION, STATUS, CATEGORY_NAME, CATEGORY_ID
              FROM BOOK
             WHERE ${column} LIKE '%' || #{query} || '%')
     WHERE RN BETWEEN #{begin} AND #{end}
  </select>
  
  <!-- 시설 등록 -->
  <insert id="addFacility" parameterType="FacilityDto">
    INSERT INTO FACILITY(
      FAC_NO
    , FAC_NAME
    , FAC_CONTENT
    ) VALUES (
      FACILITY_SEQ.NEXTVAL
    , #{facName}
    , #{facContent}
    )
  </insert>
  
  <!-- 시설 이미지 등록 -->
  <insert id="addFacImage" parameterType="AttachFacDto">
    INSERT INTO ATTACH_FAC(
      FAC_ATTACH_NO
    , FAC_NO
    , FAC_PATH
    , FAC_ORIGINAL_FILENAME
    , FAC_FILESYSTEM_NAME
    , FAC_HAS_THUMBNAIL
    ) VALUES (
      ATTACH_FAC_SEQ.NEXTVAL
    , FACILITY_SEQ.CURRVAL
    , #{facPath}
    , #{facOriginalFilename}
    , #{facFilesystemName}
    , #{facHasThumbnail}
    )
  </insert>
  
</mapper>