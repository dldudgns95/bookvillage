<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.co.bookvillage.dao.BookMapper">

  <resultMap id="BookMap"           type="kr.co.bookvillage.dto.BookDto">
    <id      column="ISBN"          property="isbn" />
    <result  column="TITLE"         property="title" />
    <result  column="COVER"         property="cover" />
    <result  column="AUTHOR"        property="author" />
    <result  column="PUBLISHER"     property="publisher" />
    <result  column="PUBDATE"       property="pubdate" />
    <result  column="DESCRIPTION"   property="description" />
    <result  column="STATUS"        property="status" />
    <result  column="CATEGORY_NAME" property="categoryName" />
    <result  column="CATEGORY_ID"   property="categoryId" />
  </resultMap>

<!-- 신간 도서 가져오기 -->
<select id="getNewBook" resultMap="BookMap">
  SELECT ISBN, TITLE, COVER, AUTHOR, PUBLISHER, PUBDATE, DESCRIPTION, STATUS, CATEGORY_NAME, CATEGORY_ID
  FROM (
    SELECT ROW_NUMBER() OVER (ORDER BY PUBDATE DESC) AS RN, ISBN, TITLE, COVER, AUTHOR, PUBLISHER, PUBDATE, DESCRIPTION, STATUS, CATEGORY_NAME, CATEGORY_ID
    FROM BOOK
  )
  WHERE RN BETWEEN 1 AND 5
</select>

  <!-- 추천 도서 가져오기 -->
<select id="getRecoBook" resultMap="BookMap">
  SELECT ISBN, TITLE, COVER, AUTHOR, PUBLISHER, PUBDATE, DESCRIPTION, STATUS, CATEGORY_NAME, CATEGORY_ID
  FROM (
    SELECT ISBN, TITLE, COVER, AUTHOR, PUBLISHER, PUBDATE, DESCRIPTION, STATUS, CATEGORY_NAME, CATEGORY_ID
      FROM BOOK
     ORDER BY DBMS_RANDOM.VALUE 
  )
  WHERE ROWNUM BETWEEN 1 AND 5
</select>
  
  <!-- 책 검색 결과 조회 및 정렬 -->
  <select id="getBook" parameterType="map" resultMap="BookMap">
    SELECT ISBN, TITLE, COVER, AUTHOR, PUBLISHER, PUBDATE, DESCRIPTION, STATUS, CATEGORY_NAME, CATEGORY_ID
      FROM (SELECT ROW_NUMBER() OVER(ORDER BY 
                                       <choose>
                                        <when test="sortType == 'title'">TITLE ASC</when>
                                        <when test="sortType == 'author'">AUTHOR ASC</when>
                                        <when test="sortType == 'pubDate'">PUBDATE ASC</when>
                                        <otherwise>PUBDATE DESC</otherwise>
                                       </choose> 
                       ) AS RN, ISBN, TITLE, COVER, AUTHOR, PUBLISHER, PUBDATE, DESCRIPTION, STATUS, CATEGORY_NAME, CATEGORY_ID
              FROM BOOK 
             WHERE 
              <choose>
                <when test="ss == 'total'">
                  TITLE LIKE '%' || #{st} || '%' OR AUTHOR LIKE '%' || #{st} || '%'
                </when>
                <when test="ss == 'title'">
                  TITLE LIKE '%' || #{st} || '%'
                </when>
                <when test="ss == 'author'">
                  AUTHOR LIKE '%' || #{st} || '%'
                </when>
              </choose>)
     WHERE RN BETWEEN #{begin} AND #{end}        
  </select>
  
  
  <!--페이징 처리에 필요한 전체 갯수-->
  <select id="getBookCount" parameterType="BookSearchDto" resultType="int">
    SELECT COUNT(*)
      FROM BOOK
     WHERE 
      <choose>
        <when test="ss == 'total'">
          TITLE LIKE '%' || #{st} || '%' OR AUTHOR LIKE '%' || #{st} || '%'
        </when>
        <when test="ss == 'title'">
          TITLE LIKE '%' || #{st} || '%'
        </when>
        <when test="ss == 'author'">
          AUTHOR LIKE '%' || #{st} || '%'
        </when>
      </choose>       
  </select>
  
  <!-- 도서 상세로 이동 -->
  <select id="getBookDetail" parameterType="String" resultMap="BookMap">
    SELECT ISBN, TITLE, COVER, AUTHOR, PUBLISHER, PUBDATE, DESCRIPTION, STATUS, CATEGORY_NAME, CATEGORY_ID
      FROM BOOK
     WHERE ISBN = ${isbn}     
  </select>


  
  <!--대출하기-->
  <update id="updateBookCount" parameterType="int">
    UPDATE USER_T SET BOOKCOUNT = BOOKCOUNT+1 WHERE USER_NO = ${userNo}
  </update>

  <update id="updateBookStatus" parameterType="BookDto">
    UPDATE BOOK SET STATUS=0 WHERE ISBN = ${isbn}
  </update>
  
  <insert id="insertCheckoutStatus" parameterType="BookDto">
    INSERT INTO BOOK_CHECKOUT(
      CHECKOUT_NO
    , ISBN
    , USER_NO
    , STATUS
    , CHECKOUT_DATE
    ) VALUES(
      BOOK_CHECKOUT_SEQ.NEXTVAL
    , #{isbn}
    , #{userNo}
    , 0
    , SYSDATE  
    )
  </insert>
  
  
</mapper>