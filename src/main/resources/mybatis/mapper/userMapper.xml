<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.co.bookvillage.dao.UserMapper">
  
  <resultMap type="UserDto" id="UserMap">
    <id      column="USER_NO"           property="userNo" />
    <result  column="EMAIL"             property="email"/>
    <result  column="PW"                property="pw"/>
    <result  column="NAME"              property="name"/>
    <result  column="MOBILE"            property="mobile"/>
    <result  column="GENDER"            property="gender"/>
    <result  column="AGREE"             property="agree"/>
    <result  column="STATE"             property="state"/>
    <result  column="AUTH"              property="auth"/>
    <result  column="PW_MODIFIED_DATE"  property="pwModifiedDate"/>
    <result  column="JOINED_DATE"       property="joinedDate"/>
    <result  column="STATUS"            property="status"/>
    <result  column="BOOKCOUNT"         property="bookcount"/>
    <association  javaType="AccessDto" property="accessDto" >
      <result     column="EMAIL"       property="email" />
      <result     column="LOGIN_DATE"  property="loginDate" />
    </association>
  </resultMap>
    

  <select id="getUser" parameterType="Map" resultType="UserDto">
    SELECT USER_NO, EMAIL, PW, NAME, MOBILE, GENDER, AGREE, STATE, AUTH,PW_MODIFIED_DATE, JOINED_DATE, STATUS
      FROM USER_T
    <where>
      <if test="email != null">EMAIL = #{email}</if>
      <if test="pw != null">AND PW = #{pw}</if>
      <if test="userNo != null">AND USER_NO = #{userNo}</if>
    </where>
  </select>
  
  <insert id="insertAccess" parameterType="String">
    INSERT INTO ACCESS_T(
        EMAIL
      , LOGIN_DATE
    ) VALUES (
        #{email}
      , SYSDATE  
       )
  </insert>
  
  <select id="getInactiveUser" parameterType="Map" resultType="InactiveUserDto">
    SELECT USER_NO, EMAIL, PW, NAME, MOBILE, GENDER, AGREE, STATE, AUTH,PW_MODIFIED_DATE, JOINED_DATE, INACTIVE_DATE
      FROM INACTIVE_USER
     <where>
       <if test="email != null">EMAIL = #{email}</if>
       <if test="pw != null">AND PW = #{pw}</if>
     </where>
   </select>
   
   
   <insert id="insertUsesr" parameterType="UserDto">
      INSERT INTO USER_T (
        USER_NO
      , EMAIL
      , PW
      , NAME
      , MOBILE
      , GENDER
      , AGREE
      , STATE
      , AUTH
      , PW_MODIFIED_DATE
      , JOINED_DATE
      , STATUS
      ) VALUES (
          USER_T_SEQ.NEXTVAL
        , #{email}
        , #{pw}
        , #{name}
        , #{mobile}
        , #{gender}
        , #{agree}
        , 0
        , 0
      , SYSDATE
      , SYSDATE
      , 1
     )
   </insert>
   
   <update id="updatePw" parameterType="UserDto">
      UPDATE USER_T
         SET PW = #{pw}
           , PW_MODIFIED_DATE = SYSDATE
       WHERE USER_NO = {userNo}    
   </update>
   
   <select id="findId"  resultType="UserDto">
      SELECT USER_NO, EMAIL, PW, NAME, MOBILE, GENDER, AGREE, STATE, AUTH,PW_MODIFIED_DATE, JOINED_DATE, STATUS
        FROM USER_T
       WHERE NAME  = #{name}
         AND MOBILE = #{mobile}    
   </select>
   
   <select id="findIdInactiveUser"> 
      SELECT EMAIL
        FROM INACTIVE_USER
       WHERE NAME = #{name}
         AND MOBILE = #{mobile}
   </select>
  
  <insert id="insertNaverUser" parameterType="UserDto">
      INSERT INTO USER_T (
          USER_NO
        , EMAIL
        , NAME
        , MOBILE
        , GENDER
        , AGREE
        , STATE
        , PW_MODIFIED_DATE
        , JOINED_DATE
      ) VALUES (
          USER_T_SEQ.NEXTVAL
        , #{email}
        , #{name}
        , #{mobile}
        , #{gender}
        , #{agree}
        , 1
        , SYSDATE
        , SYSDATE
      )
  </insert>
  
  <update id="updatetmpPw" parameterType="Map">
    UPDATE USER_T
       SET PW = #{pwCode}
         , PW_MODIFIED_DATE = SYSDATE
     WHERE EMAIL = #{email}
  </update>
  
    
  <select id="nononon" resultMap="UserMap">
      SELECT U.USER_NO, U.EMAIL, U.NAME, U.MOBILE, U.GENDER, U.AGREE, U.STATE, U.AUTH,
         U.PW_MODIFIED_DATE, U.JOINED_DATE, U.STATUS, U.BOOKCOUNT, A.LOGIN_DATE
    FROM USER_T U INNER JOIN ACCESS_T A 
      ON U.EMAIL = A.EMAIL
    WHERE A.LOGIN_DATE <![CDATA[ <= ]]>  TRUNC(SYSDATE) - 90;
  </select>
  
  
  <select id="changePw90" parameterType="String" resultType="UserDto">
    SELECT USER_NO, EMAIL, PW, NAME, MOBILE, GENDER, AGREE, STATE, AUTH,PW_MODIFIED_DATE, JOINED_DATE, STATUS
      FROM USER_T
     WHERE SYSDATE - PW_MODIFIED_DATE >= 90
       AND EMAIL = #{email}
  </select>
  
  
  
</mapper>