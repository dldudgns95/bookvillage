<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.co.bookvillage.dao.MypageMapper">
  
  <resultMap type="BookCheckoutDto" id="BookCheckoutMap">
    <id      column="CHECKOUT_NO"   property="checkoutNo" /> 
    <result  column="STATUS"        property="status" />
    <result  column="CHECKOUT_DATE" property="checkoutDate" />
    <result  column="START_DATE"    property="startDate" />
    <result  column="DUE_DATE"      property="dueDate" />
    <result  column="END_DATE"      property="endDate" />
    <association javaType="UserDto" property="userDto">
    <id column="USER_NO" property="userNo" />   
    </association>
    <association javaType="BookDto" property="bookDto">
      <id        column="ISBN"           property="isbn"/>
      <result    column="TITLE"          property="title" />
      <result    column="COVER"          property="cover" />
      <result     column="AUTHOR"        property="author" />
      <result     column="PUBLISHER"     property="publisher" />
      <result     column="PUBDATE"       property="pubdate" />
      <result     column="DESCRIPTION"   property="description" />
      <result     column="CATEGORY_NAME" property="categoryName" />
      <result     column="CATEGORY_ID"   property="categoryId" />
    </association>
  </resultMap>
  
  <resultMap id="ScoreMap"           type="kr.co.bookvillage.dto.ScoreDto">
    <id      column="ISBN"           property="isbn" />
    <result  column="USER_NO"        property="userNo" />
    <result  column="REVIEW_DATE"    property="reviewDate" />
    <result  column="STAR"           property="star" />
    <result  column="REVIEW"         property="review" />
    <association javaType="BookDto"  property="bookDto">
      <id     column="ISBN"          property="isbn" />
      <result column="TITLE"         property="title" />
      <result column="AUTHOR"        property="author"/>
      <result column="STATUS"        property="status"/>
    </association>    
  </resultMap>
  
  <resultMap id="WishMap"      type="kr.co.bookvillage.dto.WishDto">
    <id     column="ISBN"      property="isbn" />
    <result column="USER_NO"   property="userNo" />
    <result column="WISH_DATE" property="wishDate" />
    <association javaType="BookDto"     property="bookDto">
      <id        column="ISBN"          property="isbn" />
      <result    column="TITLE"         property="title" />
      <result    column="AUTHOR"        property="author"/>
      <result    column="STATUS"        property="status"/>
    </association>
  </resultMap>
  
  <resultMap id="BookApplyMap" type="BookApplyDto">
    <id column="APPLY_NO" property="applyNo"/>
    <result column="BOOK_NAME" property="bookName"/>
    <result column="AUTHOR" property="author"/>
    <result column="PUBLISHER" property="publisher"/>
    <result column="WISH" property="wish"/>
    <result column="STATUS" property="status"/>
    <association javaType="UserDto" property="userDto">
      <id column="USER_NO" property="userNo"/>
    </association>
  </resultMap>
  
  <resultMap type="facApplyDto" id="FacApplyMap">
    <id column="FAC_APPLY_NO"     property="facApplyNo" />
    <result column="FAC_REG_DATE" property="facRegDate" />
    <result column="FAC_START"    property="facStart" />
    <result column="FAC_STATUS"   property="facStatus" />
    <association javaType="UserDto" property="userDto">
      <id column="USER_NO" property="userNo" />
      <result column="NAME" property="name" />
    </association>
    <association javaType="FacilityDto" property="facilityDto">
      <id column="FAC_NO" property="facNo" />
      <result column="FAC_NAME" property="facName" />
    </association>
  </resultMap>
  
  

  <!-- 접속한 유저의 정보가져오기(마이페이지) -->
  <select id="getMypageUser" parameterType="Map" resultType="UserDto">
    SELECT USER_NO, EMAIL, PW, NAME, MOBILE, GENDER, AGREE, STATE, AUTH,PW_MODIFIED_DATE, JOINED_DATE, STATUS, BOOKCOUNT
      FROM USER_T
    <where>
      <if test="email != null">EMAIL = #{email}</if>
      <if test="pw != null">AND PW = #{pw}</if>
      <if test="userNo != null">AND USER_NO = #{userNo}</if>
    </where>
  </select>
  
  <!-- 휴대전화번호 중복확인 -->
  <select id="getMobileCheck" parameterType="String" resultType="int">
    SELECT COUNT(*)
      FROM USER_T
     WHERE MOBILE = #{mobile}
  </select>
  
  <!-- 유저정보 변경 -->
  <update id="updateUser" parameterType="UserDto">
    UPDATE USER_T
       SET NAME = #{name}
         , MOBILE = #{mobile}
         , GENDER = #{gender}
         , AGREE = #{agree}
     WHERE USER_NO = #{userNo}    
  </update>
  
  <!-- 비밀번호 변경 -->
  <update id="updateUserPw" parameterType="Map">
    UPDATE USER_T
       SET PW = #{pw}
         , PW_MODIFIED_DATE = SYSDATE
     WHERE USER_NO = #{userNo}
  </update>
  
  <select id="getUserBookCount" parameterType="int" resultType="int">
    SELECT BOOKCOUNT
      FROM USER_T
     WHERE USER_NO = #{userNo}
  </select>
  
  <!-- 접속유저의 대출권수 -->
  <select id="getUserBookCheckoutCount" parameterType="int" resultType="int">
    SELECT COUNT(*)
      FROM BOOK_CHECKOUT
     WHERE USER_NO = #{userNo}
  </select>
  
  <!-- 접속유저의 대출리스트 -->
  <select id="getUserBookCheckoutList" parameterType="Map" resultMap="BookCheckoutMap">
    SELECT A.CHECKOUT_NO, A.USER_NO, A.ISBN, A.STATUS, A.CHECKOUT_DATE, A.START_DATE, A.DUE_DATE, A.END_DATE , A.TITLE
      FROM (SELECT ROW_NUMBER() OVER(ORDER BY CHECKOUT_NO DESC) AS RN, BC.CHECKOUT_NO, BC.USER_NO, BC.ISBN, BC.STATUS, BC.CHECKOUT_DATE, BC.START_DATE, BC.DUE_DATE, BC.END_DATE, B.TITLE
              FROM BOOK_CHECKOUT BC INNER JOIN BOOK B
                ON B.ISBN = BC.ISBN
             WHERE BC.USER_NO = #{userNo}) A
     WHERE A.RN BETWEEN #{begin} AND #{end}
  </select>
  
  <!-- 접속유저의 대출연장신청 -->
  <update id="updateDueDate" parameterType="int">
    UPDATE BOOK_CHECKOUT
       SET DUE_DATE = DUE_DATE + 7, DELAY = 1
     WHERE STATUS = 1 AND DELAY = 0 AND CHECKOUT_NO = #{checkoutNo}
  </update>
  
  <!-- 접속유저가 작성한 한줄평갯수 -->
  <select id="getReviewCount" parameterType="int" resultType="int">
    SELECT COUNT(*)
      FROM SCORE
     WHERE USER_NO = #{userNo}
  </select>
  
  <!-- 접속유저가 작성한 한줄평리스트 -->
  <select id="getReviewList" parameterType="Map" resultType="ScoreDto">
    SELECT A.ISBN, A.USER_NO, A.REVIEW_DATE, A.STAR, A.REVIEW , A.TITLE
      FROM (SELECT ROW_NUMBER() OVER(ORDER BY REVIEW_DATE) AS RN, S.ISBN, S.USER_NO, S.REVIEW_DATE, S.STAR, S.REVIEW, B.TITLE
              FROM SCORE S INNER JOIN BOOK B
                ON S.ISBN = B.ISBN
             WHERE USER_NO = #{userNo}) A
     WHERE A.RN BETWEEN #{begin} AND #{end}
  </select>
  
  <!-- 접속유저가 작성한 한줄평 삭제 -->
  <delete id="deleteReview" parameterType="ScoreDto">
    DELETE
      FROM SCORE
     WHERE ISBN = #{isbn} AND USER_NO = #{userNo}
  </delete>
  
  <!-- 접속유저의 관심도서 갯수 -->
  <select id="getWishCount" parameterType="int" resultType="int">
    SELECT COUNT(*)
      FROM WISH
     WHERE USER_NO = #{userNo}
  </select>
  
  <!-- 접속유저의 관심도서 리스트 -->
  <select id="getWishBookList" parameterType="Map" resultType="WishDto">
    SELECT A.ISBN, A.USER_NO, A.WISH_DATE, A.TITLE
      FROM (SELECT ROW_NUMBER() OVER(ORDER BY WISH_DATE DESC) AS RN, W.ISBN, W.USER_NO, W.WISH_DATE, B.TITLE
              FROM WISH W INNER JOIN BOOK B
                ON W.ISBN = B.ISBN
             WHERE W.USER_NO = #{userNo}) A
     WHERE A.RN BETWEEN #{begin} AND #{end}
  </select>
  
  <!-- 대출신청취소 - 대출신청상태를 취소로변경 -->
  <update id="cancleCheckout" parameterType="int">
    UPDATE BOOK_CHECKOUT
       SET STATUS = 4
     WHERE CHECKOUT_NO = #{checkoutNo}
  </update>
  
  <!-- 대출신청취소 - 책을 대출가능으로 업데이트 -->
  <update id="updateBookStatus" parameterType="BookDto">
    UPDATE BOOK
       SET STATUS = 1
     WHERE ISBN = #{isbn}
  </update>
  
  <!-- 대출신청취소 - 유저의 대출권수 줄이기 -->
  <update id="minusBookCount" parameterType="int">
    UPDATE USER_T
       SET BOOKCOUNT = BOOKCOUNT - 1
     WHERE USER_NO = #{userNo}
       AND BOOKCOUNT &gt; 0
  </update>
  
  <!-- 관심도서 삭제 -->
  <delete id="deleteWish" parameterType="WishDto">
    DELETE 
      FROM WISH
     WHERE ISBN = #{isbn} AND USER_NO = #{userNo}
  </delete>
  
  <!-- 희망도서 갯수 -->
  <select id="getApplyBookCount" resultType="int">
    SELECT COUNT(*)
      FROM BOOK_APPLY
     WHERE USER_NO = #{userNo}
  </select>
  
  <!-- 희망도서 신청목록 -->
  <select id="getApplyBookList" parameterType="Map" resultMap="BookApplyMap">
    SELECT A.APPLY_NO, A.BOOK_NAME, A.AUTHOR, A.PUBLISHER, A.WISH, A.STATUS, A.USER_NO
      FROM (SELECT ROW_NUMBER() OVER(ORDER BY APPLY_NO) AS RN, B.APPLY_NO, B.BOOK_NAME, B.AUTHOR, B.PUBLISHER, B.WISH, B.STATUS, U.USER_NO
              FROM BOOK_APPLY B INNER JOIN USER_T U
                ON B.USER_NO = U.USER_NO
             WHERE B.USER_NO = #{userNo}) A
     WHERE A.RN BETWEEN #{begin} AND #{end}
  </select>
  
  <!-- 희망도서 신청내역 수정 -->
  <update id="updateBookApply" parameterType="BookApplyDto">
    UPDATE BOOK_APPLY
       SET BOOK_NAME = #{bookName}
         , AUTHOR = #{author}
         , PUBLISHER = #{publisher}
         , WISH = #{wish}
     WHERE APPLY_NO = #{applyNo}
  </update>
  
  <!-- 희망도서 신청취소 -->
  <delete id="deleteApply" parameterType="int">
    DELETE
      FROM BOOK_APPLY
     WHERE APPLY_NO = #{applyNo}
  </delete>
  
  <!-- 시설이용신청 갯수 -->
  <select id="getFacApplyCount" resultType="int">
    SELECT COUNT(*)
      FROM FAC_APPLY
     WHERE USER_NO = #{userNo}
  </select>  
  
  <!-- 시설이용신청 목록 -->
  <select id="getFacApplyList" parameterType="Map" resultMap="FacApplyMap">
    SELECT A.FAC_APPLY_NO, A.FAC_REG_DATE, A.FAC_START, A.FAC_STATUS, A.USER_NO, A.NAME, A.FAC_NO, A.FAC_NAME
      FROM (SELECT ROW_NUMBER() OVER(ORDER BY FAC_APPLY_NO) AS RN, FAC_APPLY_NO, FAC_REG_DATE, FAC_START, FAC_STATUS, FA.USER_NO, U.NAME, FA.FAC_NO, FAC_NAME   
              FROM FAC_APPLY FA INNER JOIN USER_T U
                ON FA.USER_NO = U.USER_NO INNER JOIN FACILITY F
                ON FA.FAC_NO = F.FAC_NO
             WHERE FA.USER_NO = #{userNo}) A
     WHERE A.RN BETWEEN #{begin} AND #{end}
  </select>
  
  <!-- 시설이용신청 취소 -->
  <delete id="deleteFacApply" parameterType="int">
    DELETE
      FROM FAC_APPLY
     WHERE FAC_STATUS = 0 AND FAC_APPLY_NO = #{facApplyNo}
  </delete>
  
 

</mapper>